= {ms-msrun}[http://mspire.rubyforge.org/projects/ms-msrun]

A library for working with LC/MS runs.

{Online API}[http://rubydoc.info/gems/ms-msrun/frames] of the latest gem.

== Examples

The following example works on *ALL* versions of *mzXML* and *mzML*.

    require "ms/msrun" 

    file = "file.mzML" # works similarly
    Ms::Msrun.open(file) do |ms|
      
      # Run level information:
      ms.index.size       # number of indexed items (scans or spectra)

      sourcefile = ms.sourcefiles.first
      sourcefile.basename_noext   # "file"
      sourcefile.basename         # "file.raw"
      ms.filename                 # "file.mzML"

      # Complete scan access
      ms.each do |spectrum|

        spectrum.mzs          # NArray of m/z values
        spectrum.intensities  # NArray of m/z values
        spectrum.peaks do |mz, inten|
          puts "#{mz} #{inten}"   # print each peak on own line
        end
        spectrum.ms_level

        scan = spectrum.scan  # returns the first scan associated with spectrum
        scan.num              # scan number (if defined in the spectrum id for mzML)
        scan.time             # retention time in seconds
        scan.filter_string    # the filter line (if any)
        scan.monoisotopic_mz  # monoisotopic m/z (Thermo param)
        scan.window           # [lower_limit, upper_limit] or nil if NA
  
        # Precursor information
        pr = scan.precursor  # an Ms::Precursor object
        pr.mz
        pr.intensity      # does fast binary search if info not already given
        pr.parent         # the parent scan
        pr.charge_states  # Array of possible charge states

        end
      end

      # supports pre-filtering for faster access

      ## get just precursor info:
      ms.each(:ms_level => 2, :spectrum => false) {|scan| scan.precursor }

      ## get just level one spectra:
      ms.each(:ms_level => 1, :precursor => false) {|scan| scan.spectrum }
    end

    # Quicker way to get at the scans:
    Ms::Msrun.foreach("file.mzXML") {|scan|  scan <do something> }

    ids = ms.index.ids  # list of id's for each spectrum/scan
    id_for_spectrum_22 = ids.grep(/scan=22/).first       # mzML with Thermo derived id's
    id_for_scan_42 = ms.index.scan_num_id(42)            # mzXML

# Random access
    spectrum22 = ms.spectrum(id_for_spectrum_22)         # retrieve spectrum associated with scan 22
    
== Conversion

Can convert *mzXML* or *mzML* to *mgf* or *ms2* 

    Ms::Msrun.open(mzmlFile) do |ms|
      mgfFile = mzmlFile.chomp(".mzML") + ".ms2"
      ms.to_ms2(:output => mgfFile)
    end

Or it can be done through the command line program *ms_to_search.rb* 

    "usage:  <file>.mz[XML | ML] ... <type>"

Other output formats can be included in future versions.

== Features

[<b>Fast</b>] Uses Nokogiri and a dash of regular expressions to achieve very fast random access of scans (also supports accessing all scans or subsets of scans).
[<b>Unified</b>] One interface for all formats.
[<b>Lazy evaluation at scan and spectrum level</b>] Scans are only read from IO when requested.  Spectra are also decoded only when explicitly accessed.
[<b>Extensively tested</b>] To release, the parser must pass an extensive specification for each file version (a total of ~1500 tests).
[<b>Long-term support</b>] We will continue to support newer versions and fix any bugs or edge cases that are found.  *Please* alert us of any mzXML or mzML file that is not parsed correctly.

== Installation

    gem install ms-msrun

== Copying

    See LICENSE

== See also

mzml[http://github.com/delagoya/mzml] and the TPP[http://tools.proteomecenter.org/wiki/index.php?title=Software:TPP]
